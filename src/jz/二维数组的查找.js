/**
 * 在一个二维数组中（每个一维数组的长度相同），
 * 每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
 * 请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
 *
 * eg:[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]] => 输入7 返回true  输入5返回false
 *
 * 思路：每次比较矩阵的右上角数字，大于目标数字的话，则一整列作废，接着比较剩余行的右上角数字，如果小于目标数字则一整行作废
 *
 * **/

function find(arr, num) {
  let i = 0;
  let j = arr[0].length - 1;
  while (num !== arr[i][j]) {
    if (num < arr[i][j]) {
      j = j - 1;
    }
    if (num > arr[i][j]) {
      i = i + 1;
    }
    if (i > arr[0].length - 1 || j < 0) {
      return false;
    }
  }
  return true;
}
let a = find(
  [
    [1, 2, 8, 9],
    [2, 4, 9, 12],
    [4, 7, 10, 13],
    [6, 8, 11, 15],
  ],
  7
);

console.log(a);
